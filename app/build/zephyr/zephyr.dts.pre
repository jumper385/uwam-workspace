# 0 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/boards/arm/nucleo_f042k6/nucleo_f042k6.dts" 1






/dts-v1/;
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f042X6.dtsi" 1 3 4






# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/common/mem.h" 1 3 4
# 8 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f042X6.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f042.dtsi" 1 3 4






# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f031.dtsi" 1 3 4






# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 1 3 4







# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/armv6-m.dtsi" 1 3 4


# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/armv6-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v6m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv6m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/clock/stm32f0_clock.h" 1 3 4
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 11 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 12 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 13 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 14 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 15 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 1 3 4
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 2 3 4
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/adc/stm32l4_adc.h" 2 3 4
# 16 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 1 3 4
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 2 3 4
# 17 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4

# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/common/freq.h" 1 3 4
# 19 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f0.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m0";
   reg = <0>;
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((8) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_hsi14: clk-hsi14 {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((14) * 1000 * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "st,stm32-lse-clock";
   clock-frequency = <32768>;
   driving-capability = <0>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((40) * 1000)>;
   status = "disabled";
  };

  pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32f0-pll-clock";
   status = "disabled";
  };
 };

 soc {
  flash: flash-controller@40022000 {
   compatible = "st,stm32-flash-controller", "st,stm32f1-flash-controller";
   reg = <0x40022000 0x400>;
   interrupts = <3 0>;
   clocks = <&rcc 0x014 0x00000010>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";
    erase-block-size = <1024>;
    write-block-size = <2>;

    max-erase-time = <40>;
   };
  };

  rcc: rcc@40021000 {
   compatible = "st,stm32f0-rcc";
   #clock-cells = <2>;
   reg = <0x40021000 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@40010400 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x40010400 0x400>;
   num-lines = <16>;
   interrupts = <5 0>, <6 0>, <7 0>;
   interrupt-names = "line0-1", "line2-3", "line4-15";
   line-ranges = <0 2>, <2 2>, <4 12>;
  };

  pinctrl: pin-controller@48000000 {
   compatible = "st,stm32-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x48000000 0x1800>;

   gpioa: gpio@48000000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000000 0x400>;
    clocks = <&rcc 0x014 0x00020000>;
   };

   gpiob: gpio@48000400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000400 0x400>;
    clocks = <&rcc 0x014 0x00040000>;
   };

   gpioc: gpio@48000800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000800 0x400>;
    clocks = <&rcc 0x014 0x00080000>;
   };

   gpiod: gpio@48000c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48000c00 0x400>;
    clocks = <&rcc 0x014 0x00100000>;
   };

   gpiof: gpio@48001400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x48001400 0x400>;
    clocks = <&rcc 0x014 0x00400000>;
   };
  };

  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc 0x018 0x00004000>;
   resets = <&rctl (((0x0C) << 5U) | (14U))>;
   interrupts = <27 0>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v2";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc 0x01c 0x00200000>,



     <&rcc 0x006 ((((0x30) & 0xFFU) << 0U) | (((4) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
   interrupts = <23 0>;
   interrupt-names = "combined";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc 0x018 0x00001000>;
   interrupts = <25 3>;
   status = "disabled";
  };

  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   clocks = <&rcc 0x01c 0x10000000>;
   interrupts = <2 0>;
   prescaler = <32768>;
   status = "disabled";
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002C00 0x400>;
   clocks = <&rcc 0x01c 0x00000800>;
   interrupts = <0 2>;
   status = "disabled";
  };

  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc 0x018 0x00000800>;
   resets = <&rctl (((0x0C) << 5U) | (11U))>;
   interrupts = <13 0>, <14 0>;
   interrupt-names = "brk_up_trg_com", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc 0x01c 0x00000002>;
   resets = <&rctl (((0x10) << 5U) | (1U))>;
   interrupts = <16 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers14: timers@40002000 {
   compatible = "st,stm32-timers";
   reg = <0x40002000 0x400>;
   clocks = <&rcc 0x01c 0x00000100>;
   resets = <&rctl (((0x10) << 5U) | (8U))>;
   interrupts = <19 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers16: timers@40014400 {
   compatible = "st,stm32-timers";
   reg = <0x40014400 0x400>;
   clocks = <&rcc 0x018 0x00020000>;
   resets = <&rctl (((0x0C) << 5U) | (17U))>;
   interrupts = <21 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers17: timers@40014800 {
   compatible = "st,stm32-timers";
   reg = <0x40014800 0x400>;
   clocks = <&rcc 0x018 0x00040000>;
   resets = <&rctl (((0x0C) << 5U) | (18U))>;
   interrupts = <22 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  adc1: adc@40012400 {
   compatible = "st,stm32-adc";
   reg = <0x40012400 0x400>;
   clocks = <&rcc 0x018 0x00000200>;
   interrupts = <12 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((3) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x00) & ((1 << (3)) - 1)) << 16U) | (((12) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((3) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x01) & ((1 << (3)) - 1)) << 16U) | (((10) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((3) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x02) & ((1 << (3)) - 1)) << 16U) | (((8) & ((1 << (13)) - 1)) << 19U))
           ((((0x0C) & ((1 << (8)) - 1)) << 0U) | (((3) & ((1 << (5)) - 1)) << 8U) | (((((1 << (2)) - 1)) & ((1 << (3)) - 1)) << 13U) | (((0x03) & ((1 << (3)) - 1)) << 16U) | (((6) & ((1 << (13)) - 1)) << 19U))>;
   sampling-times = <2 8 14 29 42 56 72 240>;
   num-sampling-time-common-channels = <1>;
   st,adc-sequencer = <0>;
  };

  dma1: dma@40020000 {
   compatible = "st,stm32-dma-v2bis";
   #dma-cells = <2>;
   reg = <0x40020000 0x400>;
   clocks = <&rcc 0x014 0x1>;
   interrupts = <9 0 10 0 10 0 11 0 11 0>;
   status = "disabled";
  };
 };

 vref: vref {
  compatible = "st,stm32-vref";
  vrefint-cal-addr = <0x1FFFF7BA>;
  vrefint-cal-mv = <3300>;
  io-channels = <&adc1 17>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <2>;
};
# 8 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f031.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32f031", "st,stm32f0", "simple-bus";

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc 0x01c 0x00000001>;
   resets = <&rctl (((0x10) << 5U) | (0U))>;
   interrupts = <15 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
     compatible = "st,stm32-counter";
     status = "disabled";
    };
  };

  rtc@40002800 {
   bbram: backup_regs {
    compatible = "st,stm32-bbram";
    st,backup-regs = <5>;
    status = "disabled";
   };
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp-cal";
  ts-cal1-addr = <0x1FFFF7B8>;
  ts-cal2-addr = <0x1FFFF7C2>;
  ts-cal1-temp = <30>;
  ts-cal2-temp = <110>;
  ts-cal-vrefanalog = <3300>;
  io-channels = <&adc1 16>;
  status = "disabled";
 };


 vbat: vbat {
  compatible = "st,stm32-vbat";
  ratio = <2>;
  io-channels = <&adc1 18>;
  status = "disabled";
 };
};
# 8 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f042.dtsi" 2 3 4

/ {
 soc {
  compatible = "st,stm32f042", "st,stm32f0", "simple-bus";

  clocks {
   clk_hsi48: clk-hsi48 {
    #clock-cells = <0>;
    compatible = "fixed-clock";
    clock-frequency = <((48) * 1000 * 1000)>;
    status = "disabled";
   };
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc 0x01c 0x00020000>;
   resets = <&rctl (((0x10) << 5U) | (17U))>;
   interrupts = <28 0>;
   status = "disabled";
  };

  spi2: spi@40003800 {
   compatible = "st,stm32-spi-fifo", "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc 0x01c 0x00004000>;
   interrupts = <26 3>;
   status = "disabled";
  };

  can1: can@40006400 {
   compatible = "st,stm32-bxcan";
   reg = <0x40006400 0x400>;
   interrupts = <30 0>;
   clocks = <&rcc 0x01c 0x02000000>;
   status = "disabled";
   sample-point = <875>;
  };

  timers15: timers@40014000 {
   compatible = "st,stm32-timers";
   reg = <0x40014000 0x400>;
   clocks = <&rcc 0x018 0x00010000>;
   resets = <&rctl (((0x0C) << 5U) | (16U))>;
   interrupts = <20 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  usb: usb@40005c00 {
   compatible = "st,stm32-usb";
   reg = <0x40005c00 0x400>;
   interrupts = <31 0>;
   interrupt-names = "usb";
   num-bidir-endpoints = <8>;
   ram-size = <1024>;
   phys = <&usb_fs_phy>;
   clocks = <&rcc 0x01c 0x00800000>,
     <&rcc 0x008 ((((0x30) & 0xFFU) << 0U) | (((7) & 0x1FU) << 8U) | (((1) & 0x7U) << 13U) | (((1) & 0x7U) << 16U))>;
   status = "disabled";
  };
 };

 usb_fs_phy: usbphy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };
};
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/dts/arm/st/f0/stm32f042X6.dtsi" 2 3 4

/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((6) * 1024)>;
 };

 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((32) * 1024)>;
   };
  };
 };
};
# 9 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/boards/arm/nucleo_f042k6/nucleo_f042k6.dts" 2
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/modules/hal/stm32/dts/st/f0/stm32f042k(4-6)tx-pinctrl.dtsi" 1 3 4






# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 1 3 4
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 3 4
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl.h" 2 3 4
# 8 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/modules/hal/stm32/dts/st/f0/stm32f042k(4-6)tx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@48000000 {



   /omit-if-no-ref/ adc_in0_pa0: adc_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in1_pa1: adc_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in2_pa2: adc_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in3_pa3: adc_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in4_pa4: adc_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in5_pa5: adc_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in6_pa6: adc_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in7_pa7: adc_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in8_pb0: adc_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ adc_in9_pb1: adc_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf0: analog_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ analog_pf1: analog_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ can_rx_pa11: can_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ can_rx_pb8: can_rx_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ can_tx_pa12: can_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2c1_scl_pa9: i2c1_scl_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pa11: i2c1_scl_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pb8: i2c1_scl_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_pf1: i2c1_scl_pf1 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pa10: i2c1_sda_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pa12: i2c1_sda_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_pf0: i2c1_sda_pf0 {
    pinmux = <((((('F') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2s1_ck_pa5: i2s1_ck_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_ck_pb3: i2s1_ck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_mck_pa6: i2s1_mck_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ i2s1_mck_pb4: i2s1_mck_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ i2s1_sd_pa7: i2s1_sd_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_sd_pb5: i2s1_sd_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ i2s1_ws_pa4: i2s1_ws_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ i2s1_ws_pa15: i2s1_ws_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ spi1_miso_pa6: spi1_miso_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_pb4: spi1_miso_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_pa7: spi1_mosi_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_mosi_pb5: spi1_mosi_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_nss_pa4: spi1_nss_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_pa15: spi1_nss_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_pa5: spi1_sck_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };

   /omit-if-no-ref/ spi1_sck_pb3: spi1_sck_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-down;
    slew-rate = "very-high-speed";
   };



   /omit-if-no-ref/ tim1_bkin_pa6: tim1_bkin_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_bkin_pb5: tim16_bkin_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pa10: tim17_bkin_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_bkin_pb4: tim17_bkin_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_pa7: tim1_ch1n_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pa8: tim1_ch1_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pa9: tim1_ch2_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pa10: tim1_ch3_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pa11: tim1_ch4_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pb0: tim1_ch2n_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pb1: tim1_ch3n_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa0: tim2_ch1_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pa1: tim2_ch2_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pa2: tim2_ch3_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pa3: tim2_ch4_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa5: tim2_ch1_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pa15: tim2_ch1_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pb3: tim2_ch2_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pa6: tim3_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pa7: tim3_ch2_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pb0: tim3_ch3_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pb1: tim3_ch4_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pb4: tim3_ch1_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pb5: tim3_ch2_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((5) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa4: tim14_ch1_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pa7: tim14_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x4) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim14_ch1_pb1: tim14_ch1_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pa6: tim16_ch1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1n_pb6: tim16_ch1n_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim16_ch1_pb8: tim16_ch1_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((8) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1_pa7: tim17_ch1_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ tim17_ch1n_pb7: tim17_ch1n_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((0) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_de_pa12: usart1_de_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    drive-push-pull;
   };

   /omit-if-no-ref/ usart2_de_pa1: usart2_de_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    drive-push-pull;
   };



   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((1) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((10) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart1_rx_pb7: usart1_rx_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((7) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((3) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa15: usart2_rx_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
   };



   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((9) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart1_tx_pb6: usart1_tx_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 9U) | (((6) & 0xFU) << 5U) | (((0x0) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((2) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ usart2_tx_pa14: usart2_tx_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((14) & 0xFU) << 5U) | (((0x1) & 0x1FU) << 0U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ usb_noe_pa4: usb_noe_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((4) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_dm_pa11: usb_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((11) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_dp_pa12: usb_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((12) & 0xFU) << 5U) | (((0x10) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_noe_pa13: usb_noe_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((13) & 0xFU) << 5U) | (((0x2) & 0x1FU) << 0U))>;
   };

   /omit-if-no-ref/ usb_noe_pa15: usb_noe_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 9U) | (((15) & 0xFU) << 5U) | (((0x5) & 0x1FU) << 0U))>;
   };

  };
 };
};
# 10 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/boards/arm/nucleo_f042k6/nucleo_f042k6.dts" 2

/ {
 model = "STMicroelectronics STM32F042K6-NUCLEO board";
 compatible = "st,stm32f042k6-nucleo";

 chosen {
  zephyr,console = &usart2;
  zephyr,shell-uart = &usart2;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };

 leds: leds {
  compatible = "gpio-leds";
  green_led_3: led_3 {
   gpios = <&gpiob 3 (0 << 0)>;
   label = "User LD3";
  };
 };

 pwmleds {
  compatible = "pwm-leds";
  green_pwm_led: green_pwm_led {
   pwms = <&pwm3 32 (((20) * 1000UL) * 1000UL) (0 << 0)>;
  };
 };

 aliases {
  led0 = &green_led_3;
  pwm-led0 = &green_pwm_led;
  volt-sensor0 = &vref;
  volt-sensor1 = &vbat;
 };
};

&clk_lsi {
 status = "okay";
};

&clk_hsi {
 status = "okay";
};

&pll {
 prediv = <1>;
 mul = <6>;
 clocks = <&clk_hsi>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <((48) * 1000 * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <1>;
};

&timers3 {
 status = "okay";

 pwm3: pwm {
  status = "okay";
  pinctrl-0 = <&tim3_ch3_pb0>;
  pinctrl-names = "default";
 };
};

&usart2 {
 pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa15>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&i2c1 {
 pinctrl-0 = <&i2c1_scl_pb6 &i2c1_sda_pb7>;
 pinctrl-names = "default";
 status = "okay";
 clock-frequency = <400000>;
};

&spi1 {
 pinctrl-0 = <&spi1_sck_pb3 &spi1_miso_pb4 &spi1_mosi_pb5>;
 pinctrl-names = "default";
 cs-gpios = <&gpioa 11 ((1 << 0) | (1 << 4))>;
 status = "okay";
};

&adc1 {
 pinctrl-0 = <&adc_in0_pa0>;
 pinctrl-names = "default";
 st,adc-clock-source = <1>;
 st,adc-prescaler = <4>;
 status = "okay";
};

&rtc {
 clocks = <&rcc 0x01c 0x10000000>,
   <&rcc 0x003 ((((0x20) & 0xFFU) << 0U) | (((8) & 0x1FU) << 8U) | (((3) & 0x7U) << 13U) | (((2) & 0x7U) << 16U))>;
 status = "okay";
};

&vref {
 status = "okay";
};

&vbat {
 status = "okay";
};
# 0 "<command-line>" 2
# 1 "/Users/henrychen/Documents/digism-firmware/uwam-workspace/zephyr/misc/empty_file.c"
